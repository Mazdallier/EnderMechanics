Figure out why PartMachineFrame has no collision box
Make PartMachineFrame implement IWrenchBreakable
	Make sure every multipart drops when the frame is broken
Add generator, implements IInventory, with GUI, input slot, power buffer, and produces power off of any item
Add interface IPowerSender with methods for ejecting power and letting power be extracted
Add interface IPowerReceiver with methods for having power ejected into it and extracting power
Add Ender Nodes that can take power from an IPowerSender (via ejection or extraction) and give it to an IPowerReceiver
	Class EnderNodeNetwork
	When an Ender Node is placed in the world, it finds any other Ender Nodes in range
	If there are none, it creates a new EnderNodeNetwork
	If there are any, it copies their network to its "network" field
	All nodes will share a network object, each with their own pointer to it
	Network methods
		void addSender(IPowerSender sender)
		void addReceiver(IPowerReceiver receiver)
		void addNode(BlockEnderNode node)
		void disconnectNode(BlockEnderNode node)
		int getEnergy() (poll every item on IPowerSender list to get total energy)
		int getMaxEnergy() (poll every IPowerReceiver for max energy)
		int receiveEnergy(int amount) (Called when something (ie Dynamo) ejects power into Node. Adds power to receivers until 
	Node methods:
		onNeighborUpdate(){
			super.onNeighborUpdate();
			for(int i=0;i<6;i++){
				Block block = worldObj.getBlock(/*Block on side currently represented by i*/)
				if(block instanceof IPowerSender && !network.powerSenders.contains(block)){
					addSender(block);
				}
				if(block instanceof IPowerReceiver && !network.powerReceivers.contains(block)){
					addReceiver(block);
				}
			}
		}
		
Add an Energy Cell, implements IPowerSender and IPowerReceiver, that doesn't pull from itself to feed itself